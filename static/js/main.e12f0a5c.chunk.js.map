{"version":3,"sources":["redux/dialogs-reducer.tsx","redux/users-reducer.tsx","components/Navbar/Navbar.module.scss","api/api.tsx","components/Navbar/Navbar.tsx","components/News/News.tsx","components/Settings/Settings.tsx","components/Music/Music.tsx","redux/auth-reducer.tsx","components/Login/Login.tsx","redux/app-reducer.tsx","redux/redux-store.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","hoc/withSuspense.tsx","App.tsx","index.tsx","components/common/FormsControls/FormsControls.tsx","components/common/FormsControls/FormsControls.module.scss","assets/preloader/wedges.svg","components/common/preloader/Preloader.tsx","utils/validators/validators.ts","components/Header/Header.module.scss","redux/profile-reducer.tsx"],"names":["SEND_MESSAGE","initialState","dialogs","id","v1","name","messages","message","dialogsReducer","state","action","type","body","newMessageBody","sendMessage","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","map","u","userID","followed","count","filter","setCurrentPage","toggleIsFetching","toggleFollowingProgress","requestUsers","page","dispatch","a","usersAPI","getUsers","response","items","totalCount","follow","userId","data","resultCode","unfollow","module","exports","instance","axios","create","withCredentials","baseURL","headers","get","then","post","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authApi","me","login","email","password","rememberMe","logout","Navbar","className","s","nav","item","to","activeClassName","activeLink","active","News","props","Settings","Music","track","SET_USER_DATA","authInitialState","isAuth","setAuthUserData","payload","getAuthUserData","authReducer","minLength4","minLengthCreator","LoginReduxForm","reduxForm","form","error","handleSubmit","onSubmit","CreateField","required","Input","styles","formSummaryError","connect","auth","length","stopSubmit","_error","formData","log","initialized","appReducer","reducer","combineReducers","profilePage","profileReducer","dialogsPage","usersPage","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Header","header","src","login_block","onClick","HeaderContainer","this","React","Component","withSuspense","fallback","Preloader","DialogsContainer","lazy","ProfileContainer","UsersContainer","App","initializeApp","path","render","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","basename","process","ReactDOM","StrictMode","document","getElementById","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","placeholder","validators","component","text","validate","preloader","alt","value","maxLengthCreator","maxLength","minLength","ADD_POST","SET_USER_PROFILE","SET_STATUS","posts","likesCount","profile","newPost","newPostText","p","postId","addPostAC","setStatus","getUserProfile"],"mappings":"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","file":"static/js/main.e12f0a5c.chunk.js","sourcesContent":["import { v1 } from \"uuid\";\nimport { ActionsTypes } from \"./redux-store\";\n\nconst SEND_MESSAGE = \"SEND-MESSAGE\";\n\nexport type DialogPageType = {\n  dialogs: Array<DialogType>;\n  messages: Array<MessageType>;\n  newMessageBody: string;\n};\nexport type MessageType = {\n  id?: string;\n  message: string;\n};\nexport type DialogType = {\n  id: string;\n  name: string;\n};\n\nlet initialState = {\n  dialogs: [\n    { id: v1(), name: \"Dima\" },\n    { id: v1(), name: \"Andrew\" },\n    { id: v1(), name: \"Sveta\" },\n    { id: v1(), name: \"Sasha\" },\n    { id: v1(), name: \"Viktor\" },\n    { id: v1(), name: \"Valera\" },\n  ] as Array<DialogType>,\n  messages: [\n    { id: v1(), message: \"Hello world\" },\n    { id: v1(), message: \"How is your it-kamasutra?\" },\n    { id: v1(), message: \"Yo\" },\n    { id: v1(), message: \"Yo\" },\n    { id: v1(), message: \"Yo\" },\n  ] as Array<MessageType>,\n};\n\nexport type DialogsInitialStateType = typeof initialState;\n\nexport const dialogsReducer = (\n  state = initialState,\n  action: ActionsTypes\n): DialogsInitialStateType => {\n  switch (action.type) {\n    case SEND_MESSAGE: {\n      let body = action.newMessageBody;\n      return {\n        ...state,\n        messages: [...state.messages, { id: v1(), message: body }],\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const sendMessage = (newMessageBody: string) =>\n  ({ type: SEND_MESSAGE, newMessageBody } as const);\n","import { ActionsTypes } from \"./redux-store\";\nimport { usersAPI } from \"../api/api\";\nimport { Dispatch } from \"redux\";\nimport { updateObjectInArray } from \"../utils/object-helpers/object-helpers\";\n\nconst FOLLOW = \"USERS/FOLLOW\";\nconst UNFOLLOW = \"USERS/UNFOLLOW\";\nconst SET_USERS = \"USERS/SET_USERS\";\nconst SET_CURRENT_PAGE = \"USERS/SET_CURRENT_PAGE\";\nconst SET_TOTAL_USERS_COUNT = \"USERS/SET_TOTAL_USERS_COUNT\";\nconst TOGGLE_IS_FETCHING = \"USERS/TOGGLE_IS_FETCHING\";\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"USERS/TOGGLE_IS_FOLLOWING_PROGRESS\";\n\ntype UserLocationType = {\n  country: string;\n  city: string;\n};\n\nexport type PhotosType = {\n  small: string;\n  large: string;\n};\nexport type UserType = {\n  id: number;\n  name: string;\n  followed: boolean;\n  status: string;\n  photos: PhotosType;\n  totalCount: number;\n  error: null;\n  location: UserLocationType;\n};\n\nlet initialState = {\n  users: [] as Array<UserType>,\n  pageSize: 100,\n  totalUsersCount: 0,\n  currentPage: 2,\n  isFetching: false,\n  followingInProgress: [] as Array<number>,\n};\n\nexport type InitialStateType = typeof initialState;\n\nexport const usersReducer = (\n  state: InitialStateType = initialState,\n  action: ActionsTypes\n): InitialStateType => {\n  switch (action.type) {\n    case FOLLOW:\n      return {\n        ...state,\n        users: state.users.map((u) => {\n          if (u.id === action.userID) {\n            return { ...u, followed: true };\n          }\n          return u;\n        }),\n        // users: updateObjectInArray(state.users, action.userID, \"id\", {\n        //   followed: true,\n        // }),\n      };\n    case UNFOLLOW:\n      return {\n        ...state,\n        users: state.users.map((u) => {\n          if (u.id === action.userID) {\n            return { ...u, followed: false };\n          }\n          return u;\n        }),\n        // users: updateObjectInArray(state.users, action.userID, \"id\", {\n        //   followed: false,\n        // }),\n      };\n    case SET_USERS:\n      return { ...state, users: action.users };\n    case SET_CURRENT_PAGE:\n      return { ...state, currentPage: action.currentPage };\n    case SET_TOTAL_USERS_COUNT:\n      return { ...state, totalUsersCount: action.count };\n    case TOGGLE_IS_FETCHING:\n      return { ...state, isFetching: action.isFetching };\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      return {\n        ...state,\n        followingInProgress: action.isFetching\n          ? [...state.followingInProgress, action.userID]\n          : state.followingInProgress.filter((id) => id !== action.userID),\n      };\n    default:\n      return state;\n  }\n};\n\nexport const followSuccess = (userID: number) =>\n  ({ type: FOLLOW, userID } as const);\nexport const unfollowSuccess = (userID: number) =>\n  ({ type: UNFOLLOW, userID } as const);\nexport const setUsers = (users: Array<UserType>) =>\n  ({ type: SET_USERS, users } as const);\nexport const setCurrentPage = (currentPage: number) =>\n  ({ type: SET_CURRENT_PAGE, currentPage } as const);\nexport const setTotalUsersCount = (totalUsersCount: number) =>\n  ({\n    type: SET_TOTAL_USERS_COUNT,\n    count: totalUsersCount,\n  } as const);\nexport const toggleIsFetching = (isFetching: boolean) =>\n  ({\n    type: TOGGLE_IS_FETCHING,\n    isFetching,\n  } as const);\nexport const toggleFollowingProgress = (isFetching: boolean, userID: number) =>\n  ({\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\n    isFetching,\n    userID,\n  } as const);\n\n// * Thunks\nexport const requestUsers =\n  (page: number, pageSize: number) =>\n  async (dispatch: Dispatch<ActionsTypes>) => {\n    dispatch(toggleIsFetching(true)); // Пошел запрос, запустился фетчинг\n    dispatch(setCurrentPage(page));\n    const response = await usersAPI.getUsers(page, pageSize);\n    dispatch(toggleIsFetching(false)); // When we get answer, toggle is fetching\n    dispatch(setUsers(response.items));\n    dispatch(setTotalUsersCount(response.totalCount));\n  };\n\nconst followUnfollowFlow = async (\n  dispatch: Dispatch<ActionsTypes>,\n  userId: number,\n  apiMethod: any,\n  actionCreator: any\n) => {\n  dispatch(toggleFollowingProgress(true, userId));\n\n  const response = await apiMethod(userId);\n  if (response.data.resultCode === 0) {\n    dispatch(actionCreator(userId));\n  }\n  dispatch(toggleFollowingProgress(false, userId));\n};\n\nexport const follow =\n  (userId: number) => async (dispatch: Dispatch<ActionsTypes>) => {\n    // followUnfollowFlow(\n    //   dispatch,\n    //   userId,\n    //   usersAPI.follow.bind(usersAPI),\n    //   followSuccess\n    // );\n\n    dispatch(toggleFollowingProgress(true, userId));\n    const response = await usersAPI.follow(userId);\n    if (response.data.resultCode === 0) {\n      dispatch(followSuccess(userId));\n    }\n    dispatch(toggleFollowingProgress(false, userId));\n  };\n\nexport const unfollow =\n  (userId: number) => async (dispatch: Dispatch<ActionsTypes>) => {\n    dispatch(toggleFollowingProgress(true, userId));\n    const response = await usersAPI.unfollow(userId);\n    if (response.data.resultCode === 0) {\n      dispatch(unfollowSuccess(userId));\n    }\n    dispatch(toggleFollowingProgress(false, userId));\n  };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3F_4h\",\"item\":\"Navbar_item__nXZ7P\",\"activeLink\":\"Navbar_activeLink__2dlz-\"};","import axios from \"axios\";\n\nconst instance = axios.create({\n  withCredentials: true,\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\n  headers: {\n    \"API-KEY\": \"db8d2f12-200b-4467-ba1f-cd791df3f39c\",\n  },\n});\n\nexport const usersAPI = {\n  getUsers(currentPage: number, pageSize: number) {\n    return instance\n      .get(`users?page=${currentPage}&count=${pageSize}`)\n      .then((response) => response.data);\n  },\n  follow(userId: number) {\n    return instance.post(\n      // Здесь данные о нашей логинизации передаются 3 объектом, а не 2 как в get request\n      `follow/${userId}`\n    );\n  },\n  unfollow(userId: number) {\n    // Здесь данные о нашей логинизации передаются 2 объектом\n    return instance.delete(`follow/${userId}`);\n  },\n\n  getProfile(userId: number) {\n    console.warn(\"Obsolete method. Please use profileAPI object.\");\n    return profileAPI.getProfile(userId);\n  },\n};\n\nexport const profileAPI = {\n  getProfile(userId: number) {\n    return instance.get(`profile/` + userId);\n  },\n  getStatus(userId: number) {\n    return instance.get(`profile/status/` + userId);\n  },\n  updateStatus(status: string) {\n    return instance.put(`profile/status`, { status });\n  },\n};\n\nexport const authApi = {\n  me() {\n    return instance.get(`auth/me`);\n  },\n  login(email: string, password: string, rememberMe: boolean = false) {\n    return instance.post(`auth/login`, { email, password, rememberMe });\n  },\n  logout() {\n    return instance.delete(`auth/login`);\n  },\n};\n","import React from \"react\";\r\nimport s from \"./Navbar.module.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className={s.nav}>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/profile\" activeClassName={s.activeLink}>\r\n          Profile\r\n        </NavLink>\r\n      </div>\r\n      <div className={`${s.item} ${s.active}`}>\r\n        <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>\r\n          Messages\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to={\"/news\"} activeClassName={s.activeLink}>\r\n          News\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to={\"/music\"} activeClassName={s.activeLink}>\r\n          Music\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to={\"/settings\"} activeClassName={s.activeLink}>\r\n          Settings\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to={\"/users\"} activeClassName={s.activeLink}>\r\n          Users\r\n        </NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import s from './News.module.scss';\r\n\r\n\r\nconst News = (props: any) => {\r\n  return (\r\n    <div>\r\n      <p><span>Lur at doloribus eligendi fuga harum illo iste iusto maiores numquam pariatur quam quos, reiciendis reprehenderit, rerum totam vero.</span><span>Assumenda beatae corporis deleniti doloremque dolorum explicabo iste iure libero maxime minus molestias nemo nulla obcaecati pariatur perferendis perspiciatis, quas quidem rerum saepe veritatis. Consequatur error iure odio quae ratione?</span><span>Architecto beatae dolorum illo in labore maiores minus officia, perferendis quae quos sint velit veniam veritatis! Eos fugiat ipsam ratione repellendus voluptas? Architecto dolorem nihil provident, quos sit soluta veniam?</span><span>Dignissimos dolorum inventore ipsa iure praesentium velit veritatis. Architecto, corporis debitis doloremque ea enim excepturi ipsum magni neque nihil nisi nulla odio provident qui unde voluptatem. Alias minus porro repellendus.</span><span>Accusantium assumenda consectetur cupiditate deserunt ducimus enim id iure minima minus nesciunt nisi non, nulla, quidem sed sint totam, vero voluptatum? Deleniti, iure numquam officiis praesentium quas quidem velit voluptate.</span></p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default News;\r\n","import s from './Settings.module.scss';\r\n\r\n\r\nconst Settings = (props: any) => {\r\n  return (\r\n    <div>\r\n      <p>track</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Settings;\r\n","import s from './Music.module.scss';\r\n\r\n\r\nconst Music = (props: any) => {\r\n  return (\r\n    <div>\r\n      <p className={s.track}>Miyagi</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Music;\r\n","import { ActionsTypes } from \"./redux-store\";\nimport { authApi } from \"../api/api\";\nimport { stopSubmit } from \"redux-form\";\nimport { Dispatch } from \"redux\";\n\nconst SET_USER_DATA = \"auth/SET_USER_DATA\";\n\nexport type AuthInitialStateType = {\n  userId: number | null;\n  email: string | null;\n  login: string | null;\n  isAuth: boolean;\n};\n\nlet authInitialState = {\n  userId: null as number | null,\n  email: null as string | null,\n  login: null as string | null,\n  isAuth: false,\n};\n\nconst authReducer = (\n  state = authInitialState,\n  action: ActionsTypes\n): AuthInitialStateType => {\n  switch (action.type) {\n    case SET_USER_DATA:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const setAuthUserData = (\n  userId: number | null,\n  email: string | null,\n  login: string | null,\n  isAuth: boolean\n) =>\n  ({\n    type: SET_USER_DATA,\n    payload: { userId, email, login, isAuth },\n  } as const);\n\n// * Promise with then\n// export const getAuthUserData = () => (dispatch: Dispatch<ActionsTypes>) => {\n//   authApi.me().then((response) => {\n//     if (response.data.resultCode === 0) {\n//       let { id, email, login } = response.data.data;\n//       dispatch(setAuthUserData(id, email, login, true));\n//     }\n//   });\n// };\n\n// * Async await\nexport const getAuthUserData =\n  () => async (dispatch: Dispatch<ActionsTypes>) => {\n    let response = await authApi.me();\n\n    if (response.data.resultCode === 0) {\n      let { id, email, login } = response.data.data;\n      dispatch(setAuthUserData(id, email, login, true));\n    }\n  };\n\nexport const login =\n  (email: string, password: string, rememberMe: boolean) =>\n  async (dispatch: any) => {\n    let response = await authApi.login(email, password, rememberMe);\n    if (response.data.resultCode === 0) {\n      dispatch(getAuthUserData());\n    } else {\n      let message =\n        response.data.messages.length > 0\n          ? response.data.messages[0]\n          : \"Some error\";\n      dispatch(stopSubmit(\"login\", { _error: message }));\n    }\n  };\n\nexport const logout = () => async (dispatch: Dispatch<ActionsTypes>) => {\n  let response = await authApi.logout();\n  if (response.data.resultCode === 0) {\n    dispatch(setAuthUserData(null, null, null, false));\n  }\n};\n\nexport default authReducer;\n","import { Field, reduxForm } from \"redux-form\";\nimport { CreateField, Input } from \"../common/FormsControls/FormsControls\";\nimport { minLengthCreator, required } from \"../../utils/validators/validators\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../redux/auth-reducer\";\nimport { Redirect } from \"react-router-dom\";\nimport { AppStateType } from \"../../redux/redux-store\";\nimport styles from \"./../common/FormsControls/FormsControls.module.scss\";\nconst mapStateToProps = (state: AppStateType) => ({\n  isAuth: state.auth.isAuth,\n});\n\nconst Login = (props: any) => {\n  const onSubmit = (formData: any) => {\n    console.log(formData);\n    props.login(formData.email, formData.password, formData.rememberMe);\n  };\n\n  if (props.isAuth) {\n    return <Redirect to={\"/profile\"} />;\n  }\n\n  return (\n    <div>\n      <h1>LOGIN</h1>\n      <LoginReduxForm onSubmit={onSubmit} />\n    </div>\n  );\n};\n\nconst minLength4 = minLengthCreator(4);\n\nconst LoginForm = (\n  { handleSubmit }: { handleSubmit: () => any },\n  error: boolean\n) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        {CreateField(\"Email\", \"email\", [required, minLength4], Input, null)}\n        {CreateField(\"Password\", \"password\", [required, minLength4], Input, {\n          type: \"password\",\n        })}\n        {CreateField(\n          null,\n          \"rememberMe\",\n          null,\n          Input,\n          { type: \"checkbox\" },\n          \"Remember me\"\n        )}\n\n        {/*<Field*/}\n        {/*  type=\"text\"*/}\n        {/*  placeholder=\"Email\"*/}\n        {/*  name=\"email\"*/}\n        {/*  component={Input}*/}\n        {/*  validate={[required, minLength4]}*/}\n        {/*/>*/}\n      </div>{\" \"}\n      <div>\n        {/*<Field*/}\n        {/*  type=\"password\"*/}\n        {/*  placeholder=\"Password\"*/}\n        {/*  name=\"password\"*/}\n        {/*  component={Input}*/}\n        {/*  validate={[required, minLength4]}*/}\n        {/*/>*/}\n      </div>{\" \"}\n      <div>\n        {/*<Field type=\"checkbox\" component={\"input\"} name={\"rememberMe\"} />*/}\n        {/*remember me*/}\n      </div>\n      {error && <div className={styles.formSummaryError}>Error</div>}\n      <div>\n        <button>Login</button>\n      </div>\n    </form>\n  );\n};\n\nconst LoginReduxForm = reduxForm({\n  form: \"login\", // a unique name for this form\n  //@ts-ignore\n})(LoginForm); // TODO: Typification\n\nexport default connect(mapStateToProps, { login })(Login);\n","import { getAuthUserData, setAuthUserData } from \"./auth-reducer\";\n\ntype InitialStateType = {\n  initialized: boolean;\n};\n\nlet initialState: InitialStateType = {\n  initialized: false,\n};\n\ntype InitializedSuccessActionType = {\n  type: \"INITIALIZED_SUCCESS\";\n};\n\nconst appReducer = (\n  state = initialState,\n  action: ActionsTypes\n): InitialStateType => {\n  switch (action.type) {\n    case \"INITIALIZED_SUCCESS\":\n      return {\n        ...state,\n        initialized: true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const initializedSuccess = (): InitializedSuccessActionType =>\n  ({\n    type: \"INITIALIZED_SUCCESS\",\n  } as const);\n\nexport const initializeApp = () => (dispatch: any) => {\n  // * Type for THUNK Dispatch\n  let promise = dispatch(getAuthUserData());\n  Promise.all([promise]).then(() => {\n    dispatch(initializedSuccess());\n  });\n};\n\ntype ActionsTypes =\n  | InitializedSuccessActionType\n  | ReturnType<typeof setAuthUserData>;\n\nexport default appReducer;\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\nimport {\n  addPostAC,\n  deleteMessage,\n  profileReducer,\n  setStatus,\n  setUserProfile,\n} from \"./profile-reducer\";\nimport { dialogsReducer, sendMessage } from \"./dialogs-reducer\";\nimport {\n  followSuccess,\n  setCurrentPage,\n  setTotalUsersCount,\n  setUsers,\n  toggleFollowingProgress,\n  toggleIsFetching,\n  unfollowSuccess,\n  usersReducer,\n} from \"./users-reducer\";\nimport authReducer, { setAuthUserData } from \"./auth-reducer\";\nimport { reducer as formReducer } from \"redux-form\";\nimport thunkMiddleware from \"redux-thunk\";\nimport appReducer from \"./app-reducer\";\n\nexport type ActionsTypes =\n  | ReturnType<typeof addPostAC>\n  | ReturnType<typeof deleteMessage>\n  | ReturnType<typeof sendMessage>\n  | ReturnType<typeof followSuccess>\n  | ReturnType<typeof unfollowSuccess>\n  | ReturnType<typeof setUsers>\n  | ReturnType<typeof setTotalUsersCount>\n  | ReturnType<typeof setCurrentPage>\n  | ReturnType<typeof toggleIsFetching>\n  | ReturnType<typeof setUserProfile>\n  | ReturnType<typeof toggleFollowingProgress>\n  | ReturnType<typeof setStatus>\n  | ReturnType<typeof setAuthUserData>;\n\nconst reducer = combineReducers({\n  profilePage: profileReducer,\n  dialogsPage: dialogsReducer,\n  usersPage: usersReducer,\n  auth: authReducer,\n  form: formReducer,\n  app: appReducer,\n});\n\ntype RootReduceType = typeof reducer;\nexport type AppStateType = ReturnType<RootReduceType>;\n\n// @ts-ignore\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(thunkMiddleware))\n);\n\n// export let store = createStore(reducer, applyMiddleware(thunkMiddleware));\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport s from \"./Header.module.scss\";\n\nconst Header = (props: any) => {\n  return (\n    <header className={s.header}>\n      <img src=\"https://www.freelogodesign.org/Content/img/logo-ex-7.png\" />\n      <div className={s.login_block}>\n        {props.isAuth ? (\n          <div>\n            {props.login} - <button onClick={props.logout}>Log out</button>\n          </div>\n        ) : (\n          <NavLink to={\"/login\"}>Login</NavLink>\n        )}\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../redux/auth-reducer\";\nimport { AppStateType } from \"../../redux/redux-store\";\n\ntype MapStateToProps = {\n  isAuth: boolean;\n  login: string | null;\n};\n\ntype HeaderPropsType = MapStateToProps;\n\nclass HeaderContainer extends React.Component<HeaderPropsType> {\n  render() {\n    return <Header {...this.props} />;\n    // this.props - прокидываем все пропсы в header\n  }\n}\n\nlet mapStateToProps = (state: AppStateType): MapStateToProps => ({\n  isAuth: state.auth.isAuth,\n  login: state.auth.login,\n});\n\nexport default connect(mapStateToProps, { logout })(HeaderContainer);\n","import React from \"react\";\nimport { Suspense } from \"react\";\nimport { Preloader } from \"../components/common/preloader/Preloader\";\n\nexport const withSuspense = (Component: any) => {\n  return (props: any) => {\n    return (\n      <Suspense fallback={<Preloader />}>\n        <Component {...props} />\n      </Suspense>\n    );\n  };\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport { BrowserRouter, Route, withRouter } from \"react-router-dom\";\nimport News from \"./components/News/News\";\nimport Settings from \"./components/Settings/Settings\";\nimport Music from \"./components/Music/Music\";\nimport Login from \"./components/Login/Login\";\nimport { connect, Provider } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { initializeApp } from \"./redux/app-reducer\";\nimport { AppStateType, store } from \"./redux/redux-store\";\nimport { Preloader } from \"./components/common/preloader/Preloader\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport { withSuspense } from \"./hoc/withSuspense\";\n\nconst DialogsContainer = React.lazy(\n  () => import(\"./components/Dialogs/DialogsContainer\")\n);\nconst ProfileContainer = React.lazy(\n  () => import(\"./components/Profile/ProfileContainer\")\n);\nconst UsersContainer = React.lazy(\n  () => import(\"./components/users/UsersContainer\")\n);\n\nclass App extends React.Component {\n  componentDidMount() {\n    //@ts-ignore\n    this.props.initializeApp();\n  }\n\n  render() {\n    //@ts-ignore\n    if (!this.props.initializeApp) {\n      return <Preloader />;\n    }\n    return (\n      <div className=\"app-wrapper\">\n        <HeaderContainer />\n        <Navbar />\n        <div className=\"app-wrapper-content\">\n          <Route path=\"/dialogs\" render={withSuspense(DialogsContainer)} />\n          <Route\n            path=\"/profile/:userID?\"\n            render={withSuspense(ProfileContainer)}\n          />\n          <Route path=\"/users\" render={withSuspense(UsersContainer)} />\n\n          <Route path=\"/news\" render={() => <News />} />\n          <Route path=\"/music\" render={() => <Music />} />\n          <Route path=\"/settings\" render={() => <Settings />} />\n          <Route path=\"/login\" render={() => <Login />} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n  initialized: state.app.initialized,\n});\n\nlet AppContainer = compose(\n  withRouter,\n  connect(mapStateToProps, { initializeApp })\n)(App);\n\nconst SamuraiJSApp = (props: any) => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        {/*// @ts-ignore*/}\n        <AppContainer />\n      </Provider>\n    </BrowserRouter>\n  );\n};\n\nexport default SamuraiJSApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport SamuraiJSApp from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <SamuraiJSApp />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import styles from \"./FormsControls.module.scss\";\nimport { Field } from \"redux-form\";\nimport { required } from \"../../../utils/validators/validators\";\n\nexport const FormControl = ({\n  input,\n  meta: { touched, error },\n  children,\n  ...props\n}: any) => {\n  const hasError = touched && error;\n\n  return (\n    <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\n      <div>{children}</div>\n      {hasError && <span>{error}</span>}\n    </div>\n  );\n};\n\nexport const Textarea = (props: any) => {\n  const { input, meta, children, ...restProps } = props;\n  return (\n    <FormControl {...props}>\n      <textarea {...input} {...props} {...restProps} />\n    </FormControl>\n  );\n};\n\nexport const Input = (props: any) => {\n  const { input, meta, children, ...restProps } = props;\n  return (\n    <FormControl {...props}>\n      <input {...input} {...props} {...restProps} />\n    </FormControl>\n  );\n};\n\nexport const CreateField = (\n  placeholder?: string | null,\n  name?: string,\n  validators?: any | null,\n  component?: any | null,\n  props: any = {},\n  text?: string | null\n) => {\n  return (\n    <div>\n      <Field\n        type=\"text\"\n        placeholder={placeholder}\n        name={name}\n        component={component}\n        validate={validators}\n        {...props}\n        text={\"\"}\n      />{\" \"}\n      {text}\n    </div>\n  );\n};\n//* TODO: Type validators component\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2a4JV\",\"error\":\"FormsControls_error__1YAHO\",\"formSummaryError\":\"FormsControls_formSummaryError__1Vlo4\"};","export default __webpack_public_path__ + \"static/media/wedges.78d5fa65.svg\";","import preloader from './../../../assets/preloader/wedges.svg';\r\nimport React from 'react';\r\n\r\nexport const Preloader = () => {\r\n  return (\r\n    <img src={preloader} alt={'Preloader'}/>\r\n  );\r\n};\r\n","export const required = (value: any) => {\n  if (value) return undefined;\n  return \"Field is required\";\n};\n\nexport const maxLengthCreator = (maxLength: number) => (value: any) => {\n  if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\n  return undefined;\n};\nexport const minLengthCreator = (minLength: number) => (value: any) => {\n  if (value.length < minLength) return `Minlength is ${minLength} symbols`;\n  return undefined;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__35bBF\"};","import { v1 } from \"uuid\";\nimport { ActionsTypes } from \"./redux-store\";\nimport { profileAPI, usersAPI } from \"../api/api\";\nimport { Dispatch } from \"redux\";\n\nconst ADD_POST = \"ADD-POST\";\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\nconst SET_STATUS = \"SET_STATUS\";\n\nexport type ProfileType = {\n  userId: number;\n  lookingForAJob: boolean;\n  lookingForAJobDescription: string;\n  fullName: string;\n  contacts: any;\n  photos: any;\n  aboutMe: string;\n  status: string;\n};\n\nexport type PostType = {\n  id: string;\n  message: string;\n  likesCount: number;\n};\n\nlet initialState = {\n  posts: [\n    { id: v1(), message: \"Hi, how are you?\", likesCount: 12 },\n    { id: v1(), message: \"It's my first post\", likesCount: 11 },\n    { id: v1(), message: \"Blala\", likesCount: 11 },\n    { id: v1(), message: \"Dada\", likesCount: 15 },\n  ] as Array<PostType>,\n  profile: null as ProfileType | null,\n  status: \"\",\n};\n\nexport type InitialStateType = typeof initialState;\n\nexport const profileReducer = (\n  state: InitialStateType = initialState,\n  action: ActionsTypes\n): InitialStateType => {\n  switch (action.type) {\n    case ADD_POST: {\n      let newPost: PostType = {\n        id: v1(),\n        message: action.newPostText,\n        likesCount: 0,\n      };\n      return {\n        ...state,\n        posts: [...state.posts, newPost],\n      };\n    }\n    case SET_USER_PROFILE:\n      return { ...state, profile: action.profile };\n    case SET_STATUS:\n      return { ...state, status: action.status };\n    case \"DELETE_POST\":\n      return {\n        ...state,\n        posts: state.posts.filter((p) => p.id !== action.postId),\n      };\n    default:\n      return state;\n  }\n};\n\nexport const addPostAC = (newPostText: string) =>\n  ({ type: ADD_POST, newPostText } as const);\n\nexport const setStatus = (status: string) => {\n  return {\n    type: SET_STATUS,\n    status,\n  } as const;\n};\nexport const setUserProfile = (profile: ProfileType) =>\n  ({ type: SET_USER_PROFILE, profile } as const);\n\nexport const deleteMessage = (postId: string) =>\n  ({ type: \"DELETE_POST\", postId } as const);\n\nexport const getUserProfile =\n  (userId: number) => async (dispatch: Dispatch<ActionsTypes>) => {\n    let response = await usersAPI.getProfile(userId);\n    dispatch(setUserProfile(response.data));\n  };\n\nexport const getStatus =\n  (userId: number) => async (dispatch: Dispatch<ActionsTypes>) => {\n    let response = await profileAPI.getStatus(userId);\n    dispatch(setStatus(response.data));\n  };\n\nexport const updateStatus =\n  (status: string) => async (dispatch: Dispatch<ActionsTypes>) => {\n    let response = await profileAPI.updateStatus(status);\n    if (response.data.resultCode === 0) {\n      dispatch(setStatus(status));\n    }\n  };\n"],"sourceRoot":""}