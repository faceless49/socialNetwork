{"version":3,"sources":["hoc/withAuthRedirect.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileInfo.module.scss","components/Profile/MyPosts/MyPosts.module.scss","components/Profile/MyPosts/Post/Post.module.scss","components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","connect","props","restProps","to","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","ProfileStatusWithHooks","useState","editMode","setEditmode","status","setStatus","useEffect","console","log","onDoubleClick","onBlur","updateStatus","autoFocus","onChange","e","currentTarget","ProfileInfo","profile","src","className","s","descriptionBlock","photos","small","Preloader","Post","item","message","likesCount","MyPosts","React","memo","postElements","posts","map","p","id","reverse","postsBlock","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPostsContainer","profilePage","dispatch","addPostAC","Profile","ProfileContainer","userID","this","match","params","authorizedUserId","history","getUserProfile","getStatus","compose","userId","withRouter"],"mappings":"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","file":"static/js/3.299cd888.chunk.js","sourcesContent":["import { Redirect } from \"react-router-dom\";\nimport React, { ComponentType } from \"react\";\nimport { AppStateType } from \"../redux/redux-store\";\nimport { connect } from \"react-redux\";\n\ntype MapStatePropsType = {\n  isAuth: boolean;\n};\n\nlet mapStateToPropsForRedirect = (state: AppStateType) =>\n  ({\n    isAuth: state.auth.isAuth,\n  } as MapStatePropsType);\n\nexport const withAuthRedirect = function <T>(Component: ComponentType<T>) {\n  const RedirectComponent: React.FC<MapStatePropsType> = (props) => {\n    let { isAuth, ...restProps } = props;\n\n    if (!isAuth) return <Redirect to={\"/login\"} />;\n    return <Component {...(restProps as T)} />;\n  };\n\n  let ConnectedAuthRedirectComponent = connect<\n    MapStatePropsType,\n    {},\n    T,\n    AppStateType\n  >(mapStateToPropsForRedirect)(RedirectComponent);\n  return ConnectedAuthRedirectComponent;\n};\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__14JLS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3_b6W\",\"posts\":\"MyPosts_posts__3cmmO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__xjgp4\"};","import { ChangeEvent, useEffect, useState } from \"react\";\n\ntype PropsType = {\n  status: string;\n  updateStatus: (status: string) => void;\n};\n\nexport const ProfileStatusWithHooks = (props: PropsType) => {\n  let [editMode, setEditmode] = useState<boolean>(false);\n  let [status, setStatus] = useState<string>(props.status);\n\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setStatus(e.currentTarget.value);\n  };\n\n  const activeEditmode = () => {\n    setEditmode(!editMode);\n  };\n  const deactivateEditmode = () => {\n    setEditmode(false);\n    props.updateStatus(status);\n  };\n  console.log(\"render profilestatus\");\n  return (\n    <>\n      {!editMode && (\n        <div>\n          <span onDoubleClick={activeEditmode}>{props.status || \"----\"}</span>\n        </div>\n      )}{\" \"}\n      {editMode && (\n        <div>\n          <input\n            onBlur={deactivateEditmode}\n            autoFocus\n            value={status}\n            onChange={onStatusChange}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n","import s from \"./ProfileInfo.module.scss\";\nimport { Preloader } from \"../../common/preloader/Preloader\";\nimport { ProfileStatusWithHooks } from \"./ProfileStatusWithHooks\";\nimport React from \"react\";\nimport { ProfilePropsType } from \"../Profile\";\n\nconst ProfileInfo: React.FC<ProfilePropsType> = ({\n  profile,\n  status,\n  updateStatus,\n}) => {\n  if (!profile) {\n    return <Preloader />;\n  }\n\n  return (\n    <div>\n      <div>\n        <img src=\"https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg?auto=compress&cs=tinysrgb&h=350\" />\n      </div>\n      <div className={s.descriptionBlock}>\n        <img src={profile.photos.small} />\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","import React from 'react';\r\nimport s from './Post.module.scss';\r\nimport {PostType} from '../../../../redux/profile-reducer';\r\n\r\nconst Post = (props: PostType) => {\r\n\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg\"/>\r\n      {props.message}\r\n      <div>\r\n        <span>like</span> {props.likesCount}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;\r\n","import React from \"react\";\nimport s from \"./MyPosts.module.scss\";\nimport Post from \"./Post/Post\";\nimport { PostType } from \"../../../redux/profile-reducer\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n  maxLengthCreator,\n  required,\n} from \"../../../utils/validators/validators\";\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\n\ntype MyPostsType = {\n  posts: Array<PostType>;\n  addPost: (newPostText: string) => void;\n};\n\nexport const MyPosts = React.memo((props: MyPostsType) => {\n  console.log(\"render Mypost PC\");\n  let postElements = props.posts\n    .map((p: PostType) => (\n      <Post id={p.id} message={p.message} likesCount={p.likesCount} />\n    ))\n    .reverse();\n\n  const onAddPost = (values: any) => {\n    props.addPost(values.newPostText);\n  };\n\n  return (\n    <div className={s.postsBlock}>\n      <h3>My posts</h3>\n      <div>\n        <AddNewPostFormRedux onSubmit={onAddPost} />\n      </div>\n      <div className={s.posts}>{postElements}</div>\n    </div>\n  );\n});\n\nconst maxLength10 = maxLengthCreator(10);\nconst AddNewPostForm = (props: any) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <Field\n        component={Textarea}\n        name=\"newPostText\"\n        placeholder=\"it-kamasutra\"\n        validate={[required, maxLength10]}\n      />\n      <button>Add post</button>\n    </form>\n  );\n};\nconst AddNewPostFormRedux = reduxForm({ form: \"ProfileAddNewPostForm\" })(\n  AddNewPostForm\n);\n\nexport default MyPosts;\n","import React from \"react\";\nimport { addPostAC, PostType } from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport { connect } from \"react-redux\";\nimport { AppStateType } from \"../../../redux/redux-store\";\nimport { Dispatch } from \"redux\";\n\ntype MapStatePropsType = {\n  posts: Array<PostType>;\n};\n\ntype MapDispatchToPropsType = {\n  addPost: (newPostText: string) => void;\n};\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n  return {\n    posts: state.profilePage.posts,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\n  return {\n    addPost: (newPostText) => {\n      dispatch(addPostAC(newPostText));\n    },\n  };\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\nexport default MyPostsContainer;\n","import React from \"react\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport { ProfileType } from \"../../redux/profile-reducer\";\n\nexport type ProfilePropsType = {\n  profile: ProfileType;\n  status: string;\n  updateStatus: (status: string) => void;\n};\nconst Profile = (props: ProfilePropsType) => {\n  return (\n    <div>\n      <ProfileInfo\n        profile={props.profile}\n        status={props.status}\n        updateStatus={props.updateStatus}\n      />\n      <MyPostsContainer />\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport Profile from \"./Profile\";\nimport {\n  getStatus,\n  getUserProfile,\n  updateStatus,\n} from \"../../redux/profile-reducer\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport { AppStateType } from \"../../redux/redux-store\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\n\ntype MapStatePropsType = {\n  profile: any;\n  status: string;\n  authorizedUserId: any;\n  isAuth: boolean;\n};\n\ntype MapDispatchToProps = {\n  getUserProfile: (userID: number) => void;\n  getStatus: (userID: number) => void;\n  updateStatus: (status: string) => void;\n};\n\ntype PathParamsType = {\n  userID: any;\n};\n\ntype OwnPropsType = MapStatePropsType & MapDispatchToProps;\ntype PropsType = RouteComponentProps<PathParamsType> & OwnPropsType;\n\nclass ProfileContainer extends React.Component<PropsType> {\n  componentDidMount() {\n    let userID = this.props.match.params.userID;\n    if (!userID) {\n      userID = this.props.authorizedUserId;\n      if (!userID) {\n        this.props.history.push(\"/login\");\n      }\n    }\n    this.props.getUserProfile(userID);\n    this.props.getStatus(userID);\n  }\n\n  render() {\n    return (\n      <div>\n        <Profile\n          {...this.props}\n          profile={this.props.profile}\n          status={this.props.status}\n          updateStatus={this.props.updateStatus}\n        />\n      </div>\n    );\n  }\n}\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorizedUserId: state.auth.userId,\n  isAuth: state.auth.isAuth,\n});\nexport default compose<React.ComponentType>(\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\n  withRouter,\n  withAuthRedirect\n)(ProfileContainer);\n"],"sourceRoot":""}